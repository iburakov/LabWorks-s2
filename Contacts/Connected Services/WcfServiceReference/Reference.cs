//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contacts.WcfServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactData", Namespace="http://schemas.datacontract.org/2004/07/Contacts.WcfService")]
    [System.SerializableAttribute()]
    public partial class ContactData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime birthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mailerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime birthday {
            get {
                return this.birthdayField;
            }
            set {
                if ((this.birthdayField.Equals(value) != true)) {
                    this.birthdayField = value;
                    this.RaisePropertyChanged("birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mailer {
            get {
                return this.mailerField;
            }
            set {
                if ((object.ReferenceEquals(this.mailerField, value) != true)) {
                    this.mailerField = value;
                    this.RaisePropertyChanged("mailer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nickname {
            get {
                return this.nicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.nicknameField, value) != true)) {
                    this.nicknameField = value;
                    this.RaisePropertyChanged("nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact.FieldKind", Namespace="http://schemas.datacontract.org/2004/07/Contacts")]
    public enum ContactFieldKind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nickname = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mailer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Note = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Birthday = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IContactsWcfService")]
    public interface IContactsWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/GetAllContacts", ReplyAction="http://tempuri.org/IContactsWcfService/GetAllContactsResponse")]
        System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData> GetAllContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/GetAllContacts", ReplyAction="http://tempuri.org/IContactsWcfService/GetAllContactsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData>> GetAllContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/FindBy", ReplyAction="http://tempuri.org/IContactsWcfService/FindByResponse")]
        System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData> FindBy(Contacts.WcfServiceReference.ContactFieldKind fieldKind, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/FindBy", ReplyAction="http://tempuri.org/IContactsWcfService/FindByResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData>> FindByAsync(Contacts.WcfServiceReference.ContactFieldKind fieldKind, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/AddContact", ReplyAction="http://tempuri.org/IContactsWcfService/AddContactResponse")]
        string AddContact(Contacts.WcfServiceReference.ContactData contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/AddContact", ReplyAction="http://tempuri.org/IContactsWcfService/AddContactResponse")]
        System.Threading.Tasks.Task<string> AddContactAsync(Contacts.WcfServiceReference.ContactData contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/Greet", ReplyAction="http://tempuri.org/IContactsWcfService/GreetResponse")]
        bool Greet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/Greet", ReplyAction="http://tempuri.org/IContactsWcfService/GreetResponse")]
        System.Threading.Tasks.Task<bool> GreetAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactsWcfServiceChannel : Contacts.WcfServiceReference.IContactsWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactsWcfServiceClient : System.ServiceModel.ClientBase<Contacts.WcfServiceReference.IContactsWcfService>, Contacts.WcfServiceReference.IContactsWcfService {
        
        public ContactsWcfServiceClient() {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactsWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData> GetAllContacts() {
            return base.Channel.GetAllContacts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData>> GetAllContactsAsync() {
            return base.Channel.GetAllContactsAsync();
        }
        
        public System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData> FindBy(Contacts.WcfServiceReference.ContactFieldKind fieldKind, string query) {
            return base.Channel.FindBy(fieldKind, query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Contacts.WcfServiceReference.ContactData>> FindByAsync(Contacts.WcfServiceReference.ContactFieldKind fieldKind, string query) {
            return base.Channel.FindByAsync(fieldKind, query);
        }
        
        public string AddContact(Contacts.WcfServiceReference.ContactData contact) {
            return base.Channel.AddContact(contact);
        }
        
        public System.Threading.Tasks.Task<string> AddContactAsync(Contacts.WcfServiceReference.ContactData contact) {
            return base.Channel.AddContactAsync(contact);
        }
        
        public bool Greet() {
            return base.Channel.Greet();
        }
        
        public System.Threading.Tasks.Task<bool> GreetAsync() {
            return base.Channel.GreetAsync();
        }
    }
}
