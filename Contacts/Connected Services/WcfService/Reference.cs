//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contacts.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/Contacts")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthdayField, value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mailer {
            get {
                return this.MailerField;
            }
            set {
                if ((object.ReferenceEquals(this.MailerField, value) != true)) {
                    this.MailerField = value;
                    this.RaisePropertyChanged("Mailer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contact.FieldKind", Namespace="http://schemas.datacontract.org/2004/07/Contacts")]
        public enum FieldKind : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FirstName = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LastName = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FullName = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Nickname = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Email = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Mailer = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Phone = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Note = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Birthday = 8,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IContactsWcfService")]
    public interface IContactsWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/greet", ReplyAction="http://tempuri.org/IContactsWcfService/greetResponse")]
        bool greet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/greet", ReplyAction="http://tempuri.org/IContactsWcfService/greetResponse")]
        System.Threading.Tasks.Task<bool> greetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/GetAllContacts", ReplyAction="http://tempuri.org/IContactsWcfService/GetAllContactsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Contacts.WcfService.Contact.FieldKind))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Contacts.WcfService.Contact))]
        object GetAllContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/GetAllContacts", ReplyAction="http://tempuri.org/IContactsWcfService/GetAllContactsResponse")]
        System.Threading.Tasks.Task<object> GetAllContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/FindBy", ReplyAction="http://tempuri.org/IContactsWcfService/FindByResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Contacts.WcfService.Contact.FieldKind))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Contacts.WcfService.Contact))]
        object FindBy(Contacts.WcfService.Contact.FieldKind fieldKind, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/FindBy", ReplyAction="http://tempuri.org/IContactsWcfService/FindByResponse")]
        System.Threading.Tasks.Task<object> FindByAsync(Contacts.WcfService.Contact.FieldKind fieldKind, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/AddContact", ReplyAction="http://tempuri.org/IContactsWcfService/AddContactResponse")]
        string AddContact(Contacts.WcfService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactsWcfService/AddContact", ReplyAction="http://tempuri.org/IContactsWcfService/AddContactResponse")]
        System.Threading.Tasks.Task<string> AddContactAsync(Contacts.WcfService.Contact contact);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactsWcfServiceChannel : Contacts.WcfService.IContactsWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactsWcfServiceClient : System.ServiceModel.ClientBase<Contacts.WcfService.IContactsWcfService>, Contacts.WcfService.IContactsWcfService {
        
        public ContactsWcfServiceClient() {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactsWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactsWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool greet() {
            return base.Channel.greet();
        }
        
        public System.Threading.Tasks.Task<bool> greetAsync() {
            return base.Channel.greetAsync();
        }
        
        public object GetAllContacts() {
            return base.Channel.GetAllContacts();
        }
        
        public System.Threading.Tasks.Task<object> GetAllContactsAsync() {
            return base.Channel.GetAllContactsAsync();
        }
        
        public object FindBy(Contacts.WcfService.Contact.FieldKind fieldKind, string query) {
            return base.Channel.FindBy(fieldKind, query);
        }
        
        public System.Threading.Tasks.Task<object> FindByAsync(Contacts.WcfService.Contact.FieldKind fieldKind, string query) {
            return base.Channel.FindByAsync(fieldKind, query);
        }
        
        public string AddContact(Contacts.WcfService.Contact contact) {
            return base.Channel.AddContact(contact);
        }
        
        public System.Threading.Tasks.Task<string> AddContactAsync(Contacts.WcfService.Contact contact) {
            return base.Channel.AddContactAsync(contact);
        }
    }
}
